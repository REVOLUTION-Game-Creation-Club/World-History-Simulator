{
  "decisions": [
    {
      "id": "tribe_decide_merge",
      "name": "tribe decide to attempt merge",
      "target": "faction",
      "parameters": [
        { "id": "contact_polity", "type": "polity" },
        { "id": "chance_of_making_attempt", "type": "number" }
      ],
      "properties": [
        { "id": "target_isolation", "value": "target.preferences.isolation" }
      ],
      "description": [
        {
          "id": "description_intro",
          "text": "The people of the <<target.polity>> tribe and the <<contact_polity>> tribe have grown very close over many generations to the point some members can barely distingish between both. Elders of clan <<target>> suggest we should try convincing the leaders of <<target_polity>> into becoming part of our tribe.\n\nShould <<target.leader>> make an attempt to convince <<contact_polity>> to merge into <<target.polity>>?"
        }
      ],
      "options": [
        {
          "id": "make_attempt",
          "text": "Attempt to convince <<contact_polity>> into merging with <<target.polity>>...",
          "weight": "max(0, chance_of_making_attempt)",
          "effects": [
            {
              "id": "attempt",
              "text": "The current leader of <<contact_polity>> will receive an offer from tribe <<target_polity>>",
              "result": "contact_polity.dominant_faction.trigger_decision(tribe_decide_merge_offer, target_polity)"
            }
          ]
        },
        {
          "id": "dont_make_attempt",
          "text": "Don't waste time trying to merge the tribes...",
          "weight": "1 - min(1, chance_of_making_attempt)",
          "effects": [
            {
              "id": "increase_isolation",
              "properties": [
                { "id": "charisma_factor", "value": "0.5 + target.leader.charisma" },
                { "id": "isolation_min", "value": "lerp(target_isolation, 1, (0.1 * charisma_factor))" },
                { "id": "isolation_max", "value": "lerp(target_isolation, 1, (0.2 * charisma_factor))" }
              ],
              "text": "<<target>>: isolation preference (<<target_isolation>>) increases to: <<isolation_min>> - <<isolation_max>>",
              "result": "target.preferences.isolation = random(isolation_min, isolation_max)"
            }
          ]
        }
      ]
    },
    {
      "id": "tribe_decide_merge_offer",
      "name": "tribe decide on merge offer",
      "target": "faction",
      "parameters": [
        { "id": "attempting_polity", "type": "polity" }
      ],
      "properties": [
        { "id": "target_polity", "value": "target.polity" },
        { "id": "attempting_faction", "value": "attempting_polity.dominant_faction" },
        { "id": "relationship_value", "value": "target.get_relationship(attempting_faction)" },
        { "id": "target_isolation", "value": "target.preferences.isolation" },
        { "id": "contact_strength", "value": "target_polity.get_contact(attempting_polity).strength" },
        { "id": "chance_of_rejecting_offer", "value": "(1 - relationship_value) * (1 - (contact_strength * 3)) * target_isolation" }
      ],
      "description": [
        {
          "id": "description_intro",
          "text": "<<attempting_polity.leader>>, leader of <<attempting_polity>>, wants to convince us to merge our tribe into theirs.\n\nShould <<target.leader>> allow <<target.polity>> to merge into <<attempting_polity>>?"
        }
      ],
      "options": [
        {
          "id": "reject_offer",
          "text": "Reject offer to merge into <<attempting_polity>>...",
          "weight": "max(0, chance_of_rejecting_offer)",
          "effects": [
            {
              "id": "increase_isolation",
              "properties": [
                { "id": "charisma_factor", "value": "0.5 + target.leader.charisma" },
                { "id": "isolation_min", "value": "lerp(target_isolation, 1, (0.1 * charisma_factor))" },
                { "id": "isolation_max", "value": "lerp(target_isolation, 1, (0.2 * charisma_factor))" }
              ],
              "text": "<<target>>: isolation preference (<<target_isolation>>) increases to: <<isolation_min>> - <<isolation_max>>",
              "result": "target.preferences.isolation = random(isolation_min, isolation_max)"
            },
            {
              "id": "decrease_relation",
              "properties": [
                { "id": "charisma_factor", "value": "1.5 - target.leader.charisma" },
                { "id": "relationship_min", "value": "lerp(relationship_value, 0, (0.2 * charisma_factor))" },
                { "id": "relationship_max", "value": "lerp(relationship_value, 0, (0.1 * charisma_factor))" }
              ],
              "text": "<<target>>: relationship with <<attempting_faction>>, dominant faction of <<attempting_polity>>, decreases from <<relationship_value>> to: <<relationship_min>> - <<relationship_max>>",
              "result": "target.set_relationship(attempting_faction, random(relationship_min, relationship_max))"
            },
            {
              "id": "notify",
              "text": "The current leader of the <<attempting_polity>> tribe will be notified of our decision...",
              "result": "attempting_polity.dominant_faction.trigger_decision(tribe_rejected_tribe_merge, target.polity)"
            }
          ]
        },
        {
          "id": "accept_offer",
          "text": "Accept offer to merge into <<attempting_polity>>...",
          "weight": "1 - clamp(chance_of_rejecting_offer, 0, 1)",
          "effects": [
            {
              "id": "increase_relation",
              "properties": [
                { "id": "charisma_factor", "value": "0.5 + target.leader.charisma" },
                { "id": "relationship_min", "value": "lerp(relationship_value, 1, (0.1 * charisma_factor))" },
                { "id": "relationship_max", "value": "lerp(relationship_value, 1, (0.2 * charisma_factor))" }
              ],
              "text": "<<target>>: relationship with <<attempting_faction>>, dominant faction of <<attempting_polity>>, increases from <<relationship_value>> to: <<relationship_min>> - <<relationship_max>>",
              "result": "target.set_relationship(attempting_faction, random(relationship_min, relationship_max))"
            },
            {
              "id": "notify",
              "text": "The current leader of the <<attempting_polity>> tribe will be notified of our decision...",
              "result": "attempting_polity.dominant_faction.trigger_decision(tribe_accepted_tribe_merge, target.polity)"
            },
            {
              "id": "merge_tribe",
              "text": "the <<target.polity>> tribe merges into <<attempting_polity>>...",
              "result": "attempting_polity.merge(target.polity)"
            }
          ]
        }
      ]
    },
    {
      "id": "tribe_accepted_tribe_merge",
      "name": "tribe accepted offer to merge tribes",
      "target": "faction",
      "parameters": [
        { "id": "accepting_tribe", "type": "polity" }
      ],
      "description": [
        {
          "id": "description",
          "text": "The leader of the <<accepting_tribe>> tribe, <<accepting_tribe.leader>>, has decided to merge their tribe with ours."
        }
      ],
      "options": [
        {
          "id": "acknowledge",
          "text": "Perfect..."
        }
      ]
    },
    {
      "id": "tribe_rejected_tribe_merge",
      "name": "tribe rejected offer to merge tribes",
      "target": "faction",
      "parameters": [
        { "id": "rejecting_tribe", "type": "polity" }
      ],
      "description": [
        {
          "id": "description",
          "text": "The leader of the <<rejecting_tribe>> tribe, <<rejecting_tribe.leader>>, has decided to reject our offer for them to merge their tribe with ours."
        }
      ],
      "options": [
        {
          "id": "acknowledge",
          "text": "Another time, then..."
        }
      ]
    }
  ]
}
